// 'use strict'

/* 
=========================================================================
25.1.
For me the terminology is confusing enough to makes me out of focus 
while I'm trying to figure out what's wrong with this code.
- hero has health and power.
- getStrength method (which gets no arguments and) return either hero's current power value or power-minus-10 value if his/her health equal or bellow 5.
- whoIsStronger is a function with one argument - getStrength - which return the hero's power , 
and compares between my strength and the "incoming"(/parameter's) strength.
=== so, A) I'm not sure why not calling "myStrength" - power instead, or the hero's power - "strength" instead.
======= B) Oh, all those words, and only now I realize that the issue is not the terminology.
The issue is that getStrength() return undefined.
Conclusion: Don't run ahead like a blind donkey. Read the entire question first,
And only than, once you understand the task, only than, with your eyes open -
Start running ahead like a blind donkey.
*/



if (displaySS[0] === '0' && displaySS[1] === '0') {
    clock.style.boxShadow = `inset 1px 1px 15px 2px rgb(${randomColor}),
        2px 2px 300px 10px rgb(${randomColor})`
}
if (displaySS % 10 === 0) {
    clock.style.boxShadow = `inset 1px 1px 15px 2px rgb(${randomColor})`
}

if (displaySS[0] === '0' && displaySS[1] === '0') {
    setTimeout(function () {
        clock.style.boxShadow = `inset -5px -50px 50px 1px rgb(${randomColor},
                2px 2px 100px 30px rgb(${randomColor})`
    }, 2000)
}
if (displaySS % 10 === 0) {
    setTimeout(function () {
        clock.style.boxShadow = `inset -5px -50px 50px 1px rgb(${randomColor})`;
    }, 2000);
}

// changing colors 

// const randomColor = Math.floor(Math.random() * 256) + "," + Math.floor(Math.random() * 256) + "," + Math.floor(Math.random() * 256)

// Math.floor(Math.random() * 16777215).toString(16)

// //moon glowing 
// document.getElementById('clock').innerHTML = `${displayHH}:${displayMM}:${displaySS}`

// if (displaySS % 10 === 0) {
//     clock.style.boxShadow = `inset 1px 1px 20px 20px rgb(${randomColor})`
// }
// setTimeout(function () {
//     clock.style.boxShadow = `inset -5px -50px 50px 1px rgb(${randomColor})`;
// }, 1000);











// /*
// // Instructions
// // You are given a function, Square, that takes four parameters, a,
// // b, c, d, denoting the length of the square edges.
// // Using prototype properties, add a method to Square named
// // isSquare that prints true if a Square object has equal edges
// // and false if they are unequal.
// // Here is the Square function:*/


// // function Square(a, b, c, d){
// // this.a = a;
// // this.b = b;
// // this.c = c;
// // this.d = d;
// // }

// // const square1 = new Square(20, 20, 20, 20)

// // console.log(square1.hasOwnProperty('a'))

// // Square.prototype.isSquare = function() {
// //     this.a === this.b === this.c === this.d 
// // }
// // // console.log(square1.hasOwnProperty('isSquare'))
// // // console.log(square1.isSquare(20, 20, 20, 20))
// // console.log(square1)




// // const square2 = new Square(20, 20, 21, 20)



// // square1.Square.prototype.isSquare = function(){
// //     this.a === this.b === this.c === this.d }
















// /*
// Instructions
// Create a webpage that has a form (asks the user for its name,
// age, and email address) and when the user clicks submit, open
// a text window that writes all the information and asks for his
// confirmation. If he clicks on the confirm button, tell him
// “congratulations you successfully sent this form” if he clicks on
// change information, give him the possibility to change the
// information, and ask again for his confirmation.
// */

// // const infoForm = document.querySelector('#info-form')

// // infoForm.addEventListener('submit', function(e){
// //     // alert('submit')
// //     e.preventDefault()
// //     submitForm()
// //     console.log('submit')   
// // })

// // function submitForm(){
// //     console.log('submit')

// //     const name = document.querySelector('#name').value
// //     const age = document.querySelector('#age').value
// //     const email = document.querySelector('#email').value
    
// //     const confirmBox = document.createElement('div')
// //     confirmBox.classList.add('confirm-box')
// //     confirmBox.innerHTML = `   
// //         <h2>Are you sure you want to send this form?</h2>
// //         <p>Name: ${name}</p>
// //         <p>Age: ${age}</p>
// //         <p>Email: ${email}</p>
// //         <button id="confirm">Confirm</button>
// //         <button id="change">Change information</button>
// //     `
// //     confirmBox.style.display = 'block'
// //     confirmBox.style.position = 'absolute'
// //     confirmBox.style.top = '20%'
// //     confirmBox.style.left = '20%'
// //     confirmBox.style.background = 'yellow'
// //     confirmBox.style.padding = '20px'
// //     confirmBox.style.border = '1px solid black'
// //     confirmBox.style.borderRadius = '15px'
// //     confirmBox.style.textAlign = 'center'

// //     document.body.appendChild(confirmBox)
// // }


// // const confirm = document.querySelector('#confirm')
// // const change = document.querySelector('#change')


// // if (confirm) {
// //     alert('Congratulations you successfully sent this form')
// // } else if (change) {
// //     alert('Change information')
// //     submitForm()
// // }
// // ======================================



// // to try changing the button hover style
// // manipulating the css variables with javascript
// // FROM STACK OVERFLOW
// // var css = 'table td:hover{ background-color: #00ff00 }';
// // var style = document.createElement('style');

// // if (style.styleSheet) {
// //     style.styleSheet.cssText = css;
// // } else {
// //     style.appendChild(document.createTextNode(css));
// // }

// // document.getElementsByTagName('head')[0].appendChild(style);


// // const alphabet = "abcdefghijklmnopqrstuvwxyz".split("");
// // const randomLetter = alphabet[Math.floor(Math.random() * alphabet.length)];
// // const input = document.querySelector("input");
// // const message = document.querySelector(".message");
// // const guesses = document.querySelector(".guesses");
// // const endgame = document.querySelector(".endgame");
// // const newGame = document.querySelector("#new-game-btn");
// // const instruction = document.querySelector(".instruction");

// // const randomColor = () => {
// //     const letters = "0123456789ABCDEF";
// //     let color = "#";
// //     for (let i = 0; i < 6; i++) {
// //         color += letters[Math.floor(Math.random() * 16)];
// //     }
// //     // console.log("color",color);
// //     return color;
// // };
// // let boxShadow = "inset 1px 1px 50px 1p " + randomColor()
// // newGame.style.boxShadow = boxShadow

// // const guessedLetters = [];
// // let gameOver = false;
// // console.log("randomLetter: ", randomLetter);
// // message.style.color = "transparent";

// // input.addEventListener("keyup", (e) => {
// //     // if (gameOver) return;
// //     if (e.key === "Enter") {
// //         const guess = e.target.value;
// //         if (guess.length !== 1) {
// //         message.textContent = "Please enter a single letter";
// //         message.style.color = "red";
// //         return;
// //         }
// //         if (guessedLetters.includes(guess)) {
// //         message.textContent = "You already guessed that letter";
// //         message.style.color = "red";
// //         return;
// //         }
// //         if (guess === randomLetter) {
// //         message.textContent = "You are correct!";
// //         message.style.color = "lightgreen";
// //         endgame.classList.remove('hidden')
// //         guesses.classList.add('hidden')
// //         instruction.classList.add('hidden')
// //         gameOver = true;
// //         } else {
// //         message.textContent = "You are wrong";
// //         message.style.color = "red";
// //         guessedLetters.push(guess);
// //         guesses.textContent = guessedLetters.join(", ");
// //         }
// //         e.target.value = "";
// //     }
// //     }
// // );

// // newGame.addEventListener('click', () => {
// //     window.location.reload()
// // })






